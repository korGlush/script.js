let title = "jopaScript";
let screens = "Простые, Сложные, Интерактивные";
let screenPrice = 666666666;
let rollback = 69;
let fullPrice = 666666666666;
let adaptive = false;

console.log(typeof title);
console.log(typeof fullPrice);
console.log(typeof adaptive);

console.log(screens.length);

console.log("Стоимость верстки экранов " + screenPrice + " рублей" + " Стоимость разработки сайта " + fullPrice + " рублей");

console.log(screens.toLowerCase);

console.log(screens.split(","));

console.log((fullPrice * (rollback/100)));

alert("Ky-ky");
console.log("bruh");

/*
Правила именования 
правило 1
никакого транслита только англиский только хардкор

правило 2
использовать короткие имена только для переменныз "местного значения"

правило 3
переменные из нескольких слов пишутся вместеВотТак

правило 4
имя переменной должно максимально чётко соответствовать хранимым в ней данным

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

console 

методы 

console.assert()
вываодит в консоль (имеется ввиду вуб-консоль) сообщение и сиек вызова метода если первый аргумент false

console.clear()
очищает консоль

console.count()
выводит количество вызово метода с определённой меткой (передаётся в параметре метода)

console.countReset()
обнуляет значение счётчика с заданным значением

console.debug()
синоним для log()

console.dir()
отображает интерактивный список свойств указанного объекта JS. этот список позволит вам посмотреть дочерние объекты и их свойства

console.dirxml()
отображает представление указанного объекта в XML/HTML-виде если это возможно. если нет - в виде JS-объекта (как в виде "console.dir()")

console.error()
выводит сообщение об ошибке. для форматирования вы можете использовать подстанровочные символы (маски) с допольнительными параметрами

console._exception()
синоним для error()

console.group()
создвёт новую группировку сообщений, сдвигая все следующие выводимые строки вправо на один уровень. для завершения группы вызовите groupEnd()

console.groupCollapsed() (en-US)
Создаёт новую группировку сообщений, сдвигая все следующие сообщения вправо на один уровень. в отличие от group() вывод происходит в свёрнутую группу, требующую раскрыть её вручную по кнопке. для завершения группы вызовите groupEnd()

console.groupEnd() (en-US)
Выход из текущей группы

console.info()
информационное сообщение. для фрпматирования вы можете использовать подстановочные символы (маски) с дополнительыми параметрами

console.log()
общий метод вывода информации. для форматирования вы можете использовать подстановочные символы(маски) с дополнительными параметрави

console.profile()
запускает профайлер встроенный в браузер (например, Firefox perfomance tool) вы можете указать метку профиля (по желанию)

console.profileEnd() (en-US)
останавливает профайлер. вы можете посмотреть результат в инструментах анализа производительности браузера (например, Firefox performance tool)

console.table()
отображает табличные данные в виде таблицы

console.time()
запускает таймер с именем из переданного параметра. можно запустить одновременно до 10,000 таймеров на странице

console.timeEnd()
Останавлиевает указанный таймер и записывает в лог, солько прошло секунд от его старта

console.timeStamp()
ставит маркер в браузерном инструменте измерения произволительности Timeline или Waterfall

console.trace()
вывод трассировки стека

console.warn()
выводит предупреждабщее сообщение для форматирования вы можете использовать подстановочые символы (маски) с дополнительными праметерами


*/